{"pages":[],"posts":[{"title":"myNewTestBlog","text":"修改DNS1vim /etc/resolv.conf 添加nameserver 8.8.8.8","link":"/2020/01/28/myNewTestBlog/"},{"title":"spring boot 框架","text":"拦截器 需要实现HandlerInterceptor接口的preHandler方法 记得添加@Service 123456789101112131415161718192021222324252627@Servicepublic class LoginInterceptor implements HandlerInterceptor { @Autowired private UserMapper userMapper; @Override public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception { Cookie[] cookies = request.getCookies(); if (cookies != null){ for (Cookie cookie : cookies) { if (cookie.getName().equals(\"token\")){ String token = cookie.getValue(); UserExample userExample = new UserExample(); userExample.createCriteria() .andTokenEqualTo(token); List&lt;User&gt; users = userMapper.selectByExample(userExample); if(users.size() != 0){ User user = users.get(0); request.getSession().setAttribute(\"user\", user); break; } } } } return true; } 实现WebMvcConfigurer接口中的addInterceptors 记得添加@Configuration 1234567891011@Configurationpublic class WebConfig implements WebMvcConfigurer { @Autowired private LoginInterceptor loginInterceptor; @Override public void addInterceptors(InterceptorRegistry registry) { registry.addInterceptor(loginInterceptor).addPathPatterns(\"/**\"); }}","link":"/2019/08/10/spring-boot/"},{"title":"在windows下安装hexo静态博客并在GitHub上部署","text":"1.首先安装Node.js 点击这里下载Node.js在cmd里敲以下命令测试是否安装成功 1node -v 2.搭建Hexo安装hexo在Git bash下敲以下命令1npm install -g hexo 安装后，通过hexo命令测试是否安装成功 初始化hexo 在本地随便一个地方创建一个文件夹 文件夹右击，选择Git Bash 进行初始化1hexo init hexo 进入hexo目录1cd hexo 安装依赖文件1npm install 生成文件1hexo g 启动服务1hexo s 在浏览器输入 http://loalhost:4000 3.点击这里下载git并根据图文完成安装 通过以下命令测试是否安装成功1git --version 4.注册GitHub账号与生成ssh-keyGitHub注册链接生成ssh-key1.在桌面右击打开Git Bash2.运行以下命令创建ssh-key1ssh-keygen -t rsa -C \"你的GitHub账户名\" 3.在C:\\Users\\你的用户名\\.ssh下找到 4.之后在github添加SSH Key,在任意界面右上角，点击你的头像，选择Settings-&gt; SSH keys-&gt;New SSH key 5.配置GitHubPage,创建repository 1.登录GitHub，点击右上角“+”好，new repository2.输入仓库名：Github账号名.github.io。然后点击Create repository。 注意：这边的创建名字，一定要用的github的用户名，不然显示不出来，因为githubPage只能你的用户名。 6.启动GitHub Page 1.点进仓库后，点击右边的“Setting”，往下找到“Choose a theme” 随便选一个就OK了 5.配置hexo项目托管到GitHub上1.在hexo目录修改_config.yml,编辑最后面的deploy属性，加入代码1234deploy: type: git repository: git@github.com:GitHub账户名.github.io.git branch: master * 注意配置格式2.安装hexo-deployer-git插件1npm install hexo-deployer-git --save 部署1hexo d 6.效果 7.注意事项运行hexo命令时，必须是在hexo项目的根目录","link":"/2019/08/11/在windows下安装hexo静态博客并在GitHub上部署/"},{"title":"利用 shell 编写刑侦科推理测试题","text":"按照CSDN论坛里的大佬写的python代码翻译出来的 目录python源代码链接刑侦科推理测试题 源码bin/bashv2(){local a2=$1local a5=$2if [[ $a2 == “A” ]] &amp;&amp; [[ $a5 == “C” ]]thenreturn 1elif [[ $a2 == “B” ]] &amp;&amp; [[ $a5 == “D” ]]thenreturn 1elif [[ $a2 == “C” ]] &amp;&amp; [[ $a5 == “A” ]]thenreturn 1elif [[ $a2 == “D” ]] &amp;&amp; [[ $a5 == “B” ]]thenreturn 1elsereturn 0fi}v3(){local a=$1local a3=$2local a6=$3local a2=$4local a4=$5if [[ $a == “A” ]]thenif [[ $a3 != $a6 ]] &amp;&amp; [[ $a3 != $a2 ]] &amp;&amp; [[ $a3 != $a4 ]]thenreturn 1elsereturn 0fielif [[ $a == “B” ]]thenif [[ $a6 != $a3 ]] &amp;&amp; [[ $a6 != $a2 ]] &amp;&amp; [[ $a6 != $a4 ]]thenreturn 1elsereturn 0fielif [[ $a == “C” ]]thenif [[ $a6 != $a3 ]] &amp;&amp; [[ $a6 != $a2 ]] &amp;&amp; [[ $a6 != $a4 ]]thenreturn 1elsereturn 0fielseif [[ $a4 != $a3 ]] &amp;&amp; [[ $a4 != $a6 ]] &amp;&amp; [[ $a4 != $a2 ]]thenreturn 1elsereturn 0fifi}v4(){local a=$1local a1=$2local a5=$3local a2=$4local a7=$5local a9=$6local a6=$7local a10=$8if [[ $a == “A” ]]thenif [[ $a1 == $a5 ]]thenreturn 1elsereturn 0fielif [[ $a == “B” ]]thenif [[ $a2 == $a7 ]]thenreturn 1elsereturn 0fielif [[ $a == “C” ]]thenif [[ $a1 == $a9 ]]thenreturn 1elsereturn 0fielseif [[ $a6 == $a10 ]]thenreturn 1elsereturn 0fifi}v5(){local a=$1local a8=$2local a4=$3local a9=$4local a7=$5if [[ $a == “A” ]]thenif [[ $a == $a8 ]]thenreturn 1elsereturn 0fielif [[ $a == “B” ]]thenif [[ $a == $a4 ]]thenreturn 1elsereturn 0fielif [[ $a == “C” ]]thenif [[ $a == $a9 ]]thenreturn 1elsereturn 0fielseif [[ $a == $a7 ]]thenreturn 1elsereturn 0fifi}v6(){local a=$1local a8=$2local a2=$3local a4=$4local a1=$5local a6=$6local a3=$7local a10=$8local a5=$9local a9=$10if [[ $a == “A” ]]thenif [[ $a8 == $a2 ]] &amp;&amp; [[ $a8 == $a4 ]]thenreturn 1elsereturn 0fielif [[ $a == “B” ]]thenif [[ $a8 == $a1 ]] &amp;&amp; [[ $a8 == $a6 ]]thenreturn 1elsereturn 0fielif [[ $a == “C” ]]thenif [[ $a8 == $a3 ]] &amp;&amp; [[ $a8 == $a10 ]]thenreturn 1elsereturn 0fielseif [[ $a8 == $a5 ]] &amp;&amp; [[ $a8 == $a9 ]]thenreturn 1elsereturn 0fifi}v7(){local a1=$1local a2=$2local a3=$3local a4=$4local a5=$5local a6=$6local a7=$7local a8=$8local a9=$9local a10=${10}stats=(0 0 0 0)return_answer=(“A” “B” “C” “D”)answer=($a1 $a2 $a3 $a4 $a5 $a6 $a7 $a8 $a9 ${a10})for i in ${answer[@]}doresult=$((16#${i}-0xA))let stats[result]+=1doneMIN=${stats[0]}for I in ${!stats[@]};doif [[ ${MIN} -ge ${stats[${I}]} ]];thenMIN=${stats[${I}]}fidonefor i in `seq 0 $((${#stats[*]}-1))`doif [[ ${stats[${i}]} == ${MIN} ]]thenminA=${return_answer[$i]}fidoneif [[ $a7 == “A” ]]thenif [[ ${minA} == “C” ]]thenreturn 1elsereturn 0fielif [[ $a7 == “B” ]]thenif [[ ${minA} == “B” ]]thenreturn 1elsereturn 0fielif [[ $a7 == “C” ]]thenif [[ $minA == “A” ]]thenreturn 1elsereturn 0fielseif [[ ${minA} == “D” ]]thenreturn 1elsereturn 0fifi}v8(){local a8=$1local a1=$2local a7=$3local a5=$4local a2=$5local a10=$6answer1=$((16#${a1}))b1=$((16#${a7}-$((16#${a1}))))b2=${b1#-}c1=$((16#${a5}-$((16#${a1}))))c2=${c1#-}d1=$((16#${a2}-$((16#${a1}))))d2=${d1#-}e1=$((16#${a10}-$((16#${a1}))))e2=${e1#-}if [[ $a8 == “A” ]]thenif [[ $b2 != 1 ]]thenreturn 1elsereturn 0fielif [[ $a8 == “B” ]]thenif [[ $c2 != 1 ]]thenreturn 1elsereturn 0fielif [[ $a8 == “C” ]]thenif [[ $d2 != 1 ]]thenreturn 1elsereturn 0fielseif [[ $e2 != 1 ]]thenreturn 1elsereturn 0fifi}v9(){local a9=$1local a6=$2local a5=$3local a10=$4local a2=$5local a1=$6if [[ $a9 == “A” ]]thenif [[ $a6 == $a5 ]]thenvalY=1elsevalY=0fielif [[ $a9 == “B” ]]thenif [[ $a10 == $a5 ]]thenvalY=1elsevalY=0fielif [[ $a9 == “C” ]]thenif [[ $a2 == $a5 ]]thenvalY=1elsevalY=0fielseif [[ $a9 == $a5 ]]thenvalY=1elsevalY=0fifiif [[ $a1 == $a6 ]]thenvalX=1elsevalX=0fiif [[ $valX != $valY ]]thenreturn 1elsereturn 0fi}v10(){local a1=$1local a2=$2local a3=$3local a4=$4local a5=$5local a6=$6local a7=$7local a8=$8local a9=$9local a10=${10}stats=(0 0 0 0)return_answer=(“A” “B” “C” “D”)answer=($a1 $a2 $a3 $a4 $a5 $a6 $a7 $a8 $a9 ${a10})for i in ${answer[@]}doresult=$((16#${i}-0xA))let stats[result]+=1doneMIN=${stats[0]}for I in ${!stats[@]};doif [[ ${MIN} -ge ${stats[${I}]} ]];thenMIN=${stats[${I}]}fidoneMAX=${stats[0]}for I in ${!stats[@]};doif [[ ${MAX} -le ${stats[${I}]} ]];thenMAX=${stats[${I}]}fidonediff=$(($MAX-$MIN))if [[ $a10 == “A” ]]thenif [[ $diff = 3 ]]thenreturn 1elsereturn 0fielif [[ $a10 == “B” ]]thenif [[ $diff = 2 ]]thenreturn 1elsereturn 0fielif [[ $a10 == “C” ]]thenif [[ $diff = 4 ]]thenreturn 1elsereturn 0fielseif [[ $diff = 1 ]]thenreturn 1elsereturn 0fifi}verify(){local a1=$1local a2=$2local a3=$3local a4=$4local a5=$5local a6=$6local a7=$7local a8=$8local a9=$9local a10=${10}v2 $a2 $a5b=$?if [[ $b = 0 ]]thenreturn 0fiv3 $a3 $a3 $a6 $a2 $a4c=$?if [[ $c = 0 ]]thenreturn 0fiv4 $a4 $a1 $a5 $a2 $a7 $a9 $a6 ${a10}d=$?if [[ $d = 0 ]]thenreturn 0fiv5 $a5 $a8 $a4 $a9 $a7e=$?if [[ $e = 0 ]]thenreturn 0fiv6 $a6 $a8 $a2 $a4 $a1 $a6 $a3 $a10 $a5 $a9f=$?if [[ $f = 0 ]]thenreturn 0fiv7 $a1 $a2 $a3 $a4 $a5 $a6 $a7 $a8 $a9 ${a10}g=$?if [[ $g = 0 ]]thenreturn 0fiv8 $a8 $a1 $a7 $a5 $a2 ${a10}h=$?if [[ $h = 0 ]]thenreturn 0fiv9 ${a9} $a6 $a5 ${a10} $a2 $a1i=$?if [[ $i = 0 ]]thenreturn 0fiv10 $a1 $a2 $a3 $a4 $a5 $a6 $a7 $a8 $a9 ${a10}j=$?if [[ $j = 0 ]]thenreturn 0fireturn 1}arr=(‘A’ ‘B’ ‘C’ ‘D’)for a1 in ${arr[@]}dofor a2 in ${arr[@]}dofor a3 in ${arr[@]}dofor a4 in ${arr[@]}dofor a5 in ${arr[@]}dofor a6 in ${arr[@]}dofor a7 in ${arr[@]}dofor a8 in ${arr[@]}dofor a9 in ${arr[@]}dofor a10 in ${arr[@]}doverify $a1 $a2 $a3 $a4 $a5 $a6 $a7 $a8 $a9 ${a10}result=$?if [[ $result = 1 ]]thenecho $a1 $a2 $a3 $a4 $a5 $a6 $a7 $a8 $a9 ${a10}exit 0fidonedonedonedonedonedonedonedonedonedone 结果 答案：B, C, A, C, A, C, D, A, B, A","link":"/2019/08/10/利用-shell-编写刑侦科推理测试题/"}],"tags":[{"name":"spring boot","slug":"spring-boot","link":"/tags/spring-boot/"},{"name":"hexo","slug":"hexo","link":"/tags/hexo/"},{"name":"shell","slug":"shell","link":"/tags/shell/"}],"categories":[]}